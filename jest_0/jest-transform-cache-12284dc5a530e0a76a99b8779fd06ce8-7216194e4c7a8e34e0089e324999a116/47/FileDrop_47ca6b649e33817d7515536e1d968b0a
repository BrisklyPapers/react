'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _radium = require('radium');var _radium2 = _interopRequireDefault(_radium);
var _propTypes = require('prop-types');var _propTypes2 = _interopRequireDefault(_propTypes);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

FileDrop = function (_React$Component) {_inherits(FileDrop, _React$Component);

    function FileDrop(props) {_classCallCheck(this, FileDrop);var _this = _possibleConstructorReturn(this, (FileDrop.__proto__ || Object.getPrototypeOf(FileDrop)).call(this,
        props));
        _this.state = {
            dragState: "" };


        _this.cancelEvent = _this.cancelEvent.bind(_this);
        _this.dragOver = _this.dragOver.bind(_this);
        _this.dragLeave = _this.dragLeave.bind(_this);
        _this.onDrop = _this.onDrop.bind(_this);
        _this.onClick = _this.onClick.bind(_this);return _this;
    }_createClass(FileDrop, [{ key: 'render', value: function render()

        {var _this2 = this;
            return (
                _react2.default.createElement('div', null,
                    _react2.default.createElement('div', {
                            id: 'fileDrop',
                            onDragOver: this.dragOver,
                            onDragEnd: this.dragLeave,
                            onDragLeave: this.dragLeave,

                            onDrop: this.onDrop,
                            onClick: this.onClick,

                            style: [
                            styles.base,
                            styles[this.state.dragState]] }, 'Drop files here or click to ',


                        _react2.default.createElement('span', { id: 'browse' }, 'browse'), '.',
                        _react2.default.createElement('input', {
                            id: 'fileBox',
                            type: 'file',
                            name: 'files[]',
                            multiple: true,

                            style: [styles.fileBox],

                            ref: function ref(input) {return _this2.inputElement = input;},

                            onChange: this.onDrop })),


                    _react2.default.createElement('ul', null,
                        this.props.files.map(function (file) {return (
                                _react2.default.createElement('li', { key: file.name }, file.name));}))));




        } }, { key: 'cancelEvent', value: function cancelEvent(

        e) {
            e = e || window.event; // get window.event if e argument missing (in IE)
            if (e.preventDefault) {
                e.preventDefault();
            }
        } }, { key: 'dragOver', value: function dragOver(

        e) {
            this.cancelEvent(e);
            this.setState({ dragState: "hover" });
            return false;
        } }, { key: 'dragLeave', value: function dragLeave(

        e) {
            this.cancelEvent(e);
            this.setState({ dragState: "" });
            return false;
        } }, { key: 'onDrop', value: function onDrop(

        e) {
            this.dragLeave(e);
            var files = [];
            if (e.dataTransfer) {
                var dt = e.dataTransfer;
                if (dt.files && dt.files.length) {
                    files = dt.files;
                } else if (dt.items && dt.items.length) {
                    files = dt.items;
                }
            } else if (e.target && e.target.files) {
                files = e.target.files;
            }

            this.props.dropFiles(files);

            return false;
        } }, { key: 'onClick', value: function onClick(

        e) {
            this.inputElement.click();
        } }]);return FileDrop;}(_react2.default.Component);


FileDrop.propTypes = {
    dropFiles: _propTypes2.default.func.isRequired,
    files: _propTypes2.default.array.isRequired };


var styles = {
    base: {
        border: "1px dashed #ccc",
        padding: "10px",
        minHeight: "100px" },

    hover: {
        border: "2px dashed rgb(0, 188, 212)" },

    fileBox: {
        display: "none" } };



FileDrop = (0, _radium2.default)(FileDrop);exports.default =

FileDrop;