'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _enzyme = require('enzyme');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

MyComponent = function (_Component) {_inherits(MyComponent, _Component);
    function MyComponent() {_classCallCheck(this, MyComponent);var _this = _possibleConstructorReturn(this, (MyComponent.__proto__ || Object.getPrototypeOf(MyComponent)).call(this));

        _this._method = _this._method.bind(_this);
        _this.onDrop = _this.onDrop.bind(_this);return _this;
    }_createClass(MyComponent, [{ key: '_method', value: function _method()
        {
            return true;
        } }, { key: 'onDrop', value: function onDrop(

        files) {
            var cFiles = this.state.files;
            for (var i = 0; i < files.length; i++) {
                cFiles.push(files[i]);
            }
            this.setState({ files: cFiles });
            this.props.dropFiles(files);
        } }, { key: 'render', value: function render()

        {
            return null;
        } }]);return MyComponent;}(_react.Component);


it('a', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(MyComponent, null));
    expect(wrapper.instance()._method()).toEqual(true);
});
it('onDrop', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(MyComponent, null));
    expect(wrapper.instance().onDrop([])).toEqual(true);
});