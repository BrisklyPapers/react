'use strict';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _FileUploadPage = require('../../src/containers/FileUploadPage');var _FileUploadPage2 = _interopRequireDefault(_FileUploadPage);
var _enzyme = require('enzyme');
var _reduxMockStore = require('redux-mock-store');var _reduxMockStore2 = _interopRequireDefault(_reduxMockStore);
var _actions = require('../../src/actions');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var mockStore = (0, _reduxMockStore2.default)();

describe('containers/FileUploadPage', function () {
    var wrapper = void 0,store = void 0;

    it('maps state and dispatch to props', function () {
        store = mockStore({});
        wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FileUploadPage2.default, { store: store }));
        expect(wrapper.props()).toEqual(expect.objectContaining({
            visible: expect.any(Boolean) }));

    });

    it('should be visible', function () {
        store = mockStore({ navigation: _actions.PAGEVIEW_FILE_UPLOAD });
        wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FileUploadPage2.default, { store: store }));
        expect(wrapper.props().visible).toEqual(true);
    });

    it('should be hidden', function () {
        store = mockStore({ navigation: '' });
        wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_FileUploadPage2.default, { store: store }));
        expect(wrapper.props().visible).toEqual(false);
    });
});