'use strict';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _SearchResults = require('../../src/containers/SearchResults');var _SearchResults2 = _interopRequireDefault(_SearchResults);
var _reactTestRenderer = require('react-test-renderer');var _reactTestRenderer2 = _interopRequireDefault(_reactTestRenderer);
var _reduxMockStore = require('redux-mock-store');var _reduxMockStore2 = _interopRequireDefault(_reduxMockStore);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var mockStore = (0, _reduxMockStore2.default)();

describe('containers/SearchResults', function () {
    it('should render correctly', function () {
        var store = mockStore({ searchResults: { documents: [] } });
        var wrapper = _reactTestRenderer2.default.create(_react2.default.createElement(_SearchResults2.default, { store: store }));
        expect(wrapper.toJSON()).toMatchSnapshot();
    });

    it('should add documents to SearchResults', function () {
        var documents = [
        {
            fileName: 'bill.pdf',
            url: 'http://briskly-papers.com',
            text: ['testing search results'],
            tags: ['bill', 'source'] },

        {
            fileName: 'flower.jpg',
            url: 'https://localhost/search?q=flowers',
            text: ['pictures showing some flowers'],
            tags: ['flower', 'summer'] }];


        var store = mockStore({ searchResults: { documents: documents } });
        var wrapper = _reactTestRenderer2.default.create(_react2.default.createElement(_SearchResults2.default, { store: store }));
        expect(wrapper.toJSON()).toMatchSnapshot();
    });
});